name: Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PR diff
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          DIFF=$(git diff origin/${{ github.base_ref }} ${{ github.sha }} | base64 -w 0)
          echo "::set-output name=diff::$DIFF"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Submit AWS Batch job
        run: |
          JOB_ID=$(aws batch submit-job \
            --job-name code-review-${{ github.event.pull_request.number }} \
            --job-queue llm-job-queue \
            --job-definition llm-code-review \
            --container-overrides '{
              "environment": [
                {"name": "DIFF", "value": "${{ steps.diff.outputs.diff }}"},
                {"name": "PR_NUMBER", "value": "${{ github.event.pull_request.number }}"},
                {"name": "HUGGINGFACE_TOKEN", "value": "${{ secrets.HUGGINGFACE_TOKEN }}"}
              ]
            }' \
            --query 'jobId' \
            --output text)
          echo "::set-output name=job_id::$JOB_ID"

      - name: Wait for Batch job completion
        run: |
          aws batch wait job-complete --job-id ${{ steps.submit-job.outputs.job_id }}

      - name: Get Batch job results
        id: results
        run: |
          RESULTS=$(aws batch describe-jobs --jobs ${{ steps.submit-job.outputs.job_id }} | jq -r '.jobs[0].container.logStreamName')
          LOGS=$(aws logs get-log-events --log-group-name /aws/batch/job --log-stream-name $RESULTS | jq -r '.events[].message' | base64 -w 0)
          echo "::set-output name=logs::$LOGS"

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const decodedLogs = Buffer.from('${{ steps.results.outputs.logs }}', 'base64').toString('utf-8');
            const review = JSON.parse(decodedLogs);
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Code review results:\n\n${review.review_result}`
            })
